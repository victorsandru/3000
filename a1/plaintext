1. This is because when you use the 'sudo' command you are entering the super user.  
   This user has access to all permissions and can do almost anything. Having things saved from other users can be a security risk. However you can use the 'preserve-env' like so: sudo -E env. This flag indiicates that the user wants to preserve their existing env variables
2.
3. This command works because it is running the echo command. The echo command prints to the terminal whatever input the user inputs. And the env var is still saved to the terminal session. The env command on the otherhand has read/write privileges in the shell in comparsion to echo where it only has read. This makes env a bigger security risk.
4. export is a shell built in command as opposed to a normal command. A shell built in command are reserved keywords that works with other commands.

5a. You can use the mallopt function and pass in the M_MMAP_THRESHOLD as a value in the function. You can also use mmap() function itself.
   b. mallopt(M_MMAP_THRESHOLD, 200 * 1024);
   c. 

6a. most portable 1. hello.c 2. syscall-hello.c 3. syscall2-hello.c
   b. I ordered hello.c as the most portable because compared to the other programs, it does not have system calls.
      I next ordered syscall-hello.c as the next most portable because although it has system calls (which arent portable because each kernel is different), it has less than the last file.
      I ordered syscall2-hello.c least portable because it contains assembly. Assembly depends on the machine code instructions, so it has a lot of limitations.
7. The difference is that in syscall-hello.c you are using a standard libary function of syscall(). This means that syscall-hello.c is essentially just a wrapper for syscall-2-hello.c.